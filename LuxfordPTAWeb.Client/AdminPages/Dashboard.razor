@page "/admin"
@using LuxfordPTAWeb.Shared.Models
@using LuxfordPTAWeb.Shared.Enums
@using LuxfordPTAWeb.Client.Components.Admin
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Admin,BoardMember")]
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject LuxfordPTAWeb.Client.Code.SchoolYearSupport SchoolYearSupport
@inject IJSRuntime JS

<PageTitle>Admin Dashboard</PageTitle>

<div class="card shadow-sm mb-4">
	<div class="card-header bg-danger text-white">
		<h1 class="mb-0"><i class="bi bi-shield-lock"></i> Admin Dashboard</h1>
	</div>
	<div class="card-body">
		<p class="lead">Welcome to the PTA administration panel. Here you can manage events, content, and other administrative tasks.</p>
	</div>
</div>

<!-- School Year Context Header -->
<SchoolYearContextHeader SchoolYear="@selectedSchoolYear" />

@if (selectedSchoolYear != null)
{
	<div class="row">
		<div class="col-md-6 mb-4">
			<OfficersCommitteeChairsWidget SchoolYear="@selectedSchoolYear" AvailableUsers="@availableUsers" />
		</div>
		<div class="col-md-6 mb-4">
			<EventCalendarWidget SchoolYear="@selectedSchoolYear" Events="@filteredEvents" EventSummary="@eventSummary" />
		</div>

		<div class="col-md-6 mb-4">
			<SponsorManagementWidget />
		</div>

		<div class="col-md-6 mb-4">
			<ContentManagementWidget />
		</div>
		
		<div class="col-md-6 mb-4">
			<UserManagementWidget />
		</div>
	</div>
}
else
{
	<div class="alert alert-warning">
		<h6><i class="bi bi-calendar-x"></i> No Current School Year</h6>
		<p>Please create a new school year to get started.</p>
		<a href="/admin/school-years" class="btn btn-outline-warning me-2">
			<i class="bi bi-calendar3"></i> School Years
		</a>
	</div>
}

@code {
	private SchoolYear? selectedSchoolYear;
	private List<Event>? filteredEvents;
	private EventDashboardSummary? eventSummary;
	private List<ApplicationUser> availableUsers = new();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			selectedSchoolYear = await SchoolYearSupport.GetSelectedSchoolYearInfoAsync();

			if (selectedSchoolYear != null)
			{
				// Load all events for the selected school year
				var events = await Http.GetFromJsonAsync<List<Event>>($"api/events/all-admin?schoolYearId={selectedSchoolYear.Id}");
				filteredEvents = events ?? new List<Event>();

				// Load event summary
				await LoadEventSummaryAsync();
			}
			
			// Load available users
			availableUsers = (await Http.GetFromJsonAsync<List<ApplicationUser>>("api/users") ?? new List<ApplicationUser>())
				.OrderBy(u => u.LastName)
				.ThenBy(u => u.FirstName)
				.ToList();
		}
		catch (Exception)
		{
			// Handle errors silently for now
		}
	}

	private async Task LoadEventSummaryAsync()
	{
		try
		{
			if (selectedSchoolYear == null) return;
			eventSummary = await Http.GetFromJsonAsync<EventDashboardSummary>($"api/events/dashboard-summary/{selectedSchoolYear.Id}");
		}
		catch (Exception)
		{
			// Handle errors silently for now
		}
	}
}