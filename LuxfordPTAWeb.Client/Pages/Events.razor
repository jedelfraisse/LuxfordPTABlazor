@page "/events"
@inject HttpClient Http

<PageTitle>Events</PageTitle>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h1 class="card-title text-center mb-3">Events!</h1>
        <p class="lead text-center mb-0">
            Welcome to the events page for Luxford Elementary School. Here you'll find both PTA and school events, organized by category to help you plan your year and stay involved in our community.
        </p>
    </div>
</div>

<div class="alert alert-primary text-center mb-4">
    <h5 class="mb-2">📅 <strong><a href="images/eventcal-2025-2026.jpg" target="_blank">Download Printable Event Calendar →</a></strong></h5>
    <em>Print and post this handy calendar with all events for the 2025-2026 school year!</em>
</div>

<h2 class="h4 mt-4">Event Categories</h2>
<p>Browse our events by category:</p>

@if (eventTypes == null)
{
    <div class="alert alert-info">
        <em>Loading event categories...</em>
    </div>
}
else
{
    <div class="row mb-4">
        @foreach (var eventType in eventTypes.Where(et => et.IsActive).OrderBy(et => et.DisplayOrder))
        {
            var colClass = eventType.Size == 1 ? "col-12 mb-3" : "col-md-6 mb-3";
            <div class="@colClass">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title @eventType.ColorClass">
                            @if (!string.IsNullOrEmpty(eventType.Icon))
                            {
                                <i class="@eventType.Icon"></i>
                            }
                            <a href="events/category/@eventType.Slug" class="text-decoration-none">@eventType.Name</a>
                        </h5>
                        <p class="card-text">@eventType.Description</p>
                        <div class="mt-auto">
                            <span class="badge @(eventType.IsMandatory ? "bg-danger" : "bg-info") me-2">
                                @GetEventCount(eventType.Id) events
                            </span>
                            <a href="events/category/@eventType.Slug" class="btn btn-sm btn-outline-primary">
                                View Events <i class="bi bi-arrow-right"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<h2 class="h4 mt-4">📅 Upcoming Events</h2>
@if (upcomingEvents == null)
{
    <div class="alert alert-info">
        <em>Loading events... @testtext</em>
    </div>
}
else if (!upcomingEvents.Any())
{
    <div class="alert alert-warning">
        <em>No upcoming events in the next 30 days.</em>
    </div>
}
else
{
    <ul class="list-group list-group-flush mb-4">
        @foreach (var evt in upcomingEvents)
        {
            <li class="list-group-item">
                <strong>@evt.Title</strong><br />
                <small class="text-muted">@evt.Date.ToString("MMMM d, yyyy")</small><br />
                @evt.Description
                @if (!string.IsNullOrWhiteSpace(evt.Location))
                {
                    <div><em>@evt.Location</em></div>
                }
            </li>
        }
    </ul>
}

<h2 class="h4 mt-4">🕰️ Past Events</h2>
<div class="accordion mb-4" id="pastEventsAccordion">
    <div class="accordion-item">
        <h3 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#year2025" aria-expanded="true">
                2025-2026 School Year
            </button>
        </h3>
        <div id="year2025" class="accordion-collapse collapse show" data-bs-parent="#pastEventsAccordion">
            <div class="accordion-body">
                <ul class="list-unstyled">
                    <li class="mb-2">
                        <strong>PTA Board Election 2025-2026</strong> – August 20, 2025, School Cafeteria:
                        Elected the new board for the year. <a href="pta-board-election">View Election Details →</a>
                    </li>
                    <li class="mb-2">
                        <strong>PTA Back to School Event</strong> – August 21, 2025, School Campus:
                        Welcomed families and introduced the new board. <a href="back-to-school-night">View Event Details →</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h3 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#year2024">
                2024–2025 School Year
            </button>
        </h3>
        <div id="year2024" class="accordion-collapse collapse" data-bs-parent="#pastEventsAccordion">
            <div class="accordion-body">
                <ul class="list-unstyled">
                    <li class="mb-2"><strong>Spring Carnival</strong> – April 2025: Over 200 attendees, raised $2,000!</li>
                    <li class="mb-2"><strong>Book Fair</strong> – March 2025: Thank you to all our volunteers!</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h3 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#year2023">
                2023–2024 School Year
            </button>
        </h3>
        <div id="year2023" class="accordion-collapse collapse" data-bs-parent="#pastEventsAccordion">
            <div class="accordion-body">
                <ul class="list-unstyled">
                    <li class="mb-2"><strong>Fall Festival</strong> – October 2023: Games, food, and fun for all ages.</li>
                    <li class="mb-2"><strong>Bingo Night</strong> – January 2024: Family fun and fundraising success.</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-primary text-white fw-bold">🙋‍♀️ Get Involved</div>
    <div class="card-body">
        <p>We're always looking for volunteers to help make our events successful! Contact our Event Coordinator: Ashley Threadgill</p>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-secondary text-white fw-bold">🏫 School Closed & Special Days (2025–2026)</div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h5>Holidays (School Closed)</h5>
                <ul class="list-unstyled">
                    <li><strong>Labor Day:</strong> August 29, 2025 and September 1, 2025</li>
                    <li><strong>Veterans Day:</strong> November 11, 2025</li>
                    <li><strong>Thanksgiving:</strong> November 26–28, 2025</li>
                    <li><strong>Winter Break:</strong> December 22–31, 2025 and January 1–2, 2026</li>
                    <li><strong>Martin Luther King Jr. Day:</strong> January 19, 2026</li>
                    <li><strong>Presidents Day:</strong> February 16, 2026</li>
                    <li><strong>Spring Break:</strong> April 6–10, 2026</li>
                    <li><strong>Memorial Day:</strong> May 25, 2026</li>
                    <li><strong>Juneteenth:</strong> June 19, 2026</li>
                </ul>
            </div>
            <div class="col-md-6">
                <h5>Adjusted Dismissal Days</h5>
                <ul class="list-unstyled">
                    <li><strong>All Students:</strong> June 12, 2026</li>
                    <li><strong>High School Students:</strong> June 9–11, 2026</li>
                </ul>
                <h5 class="mt-3">Staff Days (School Closed for Students)</h5>
                <ul class="list-unstyled">
                    <li>August 18–22, 2025</li>
                    <li>September 29, 2025</li>
                    <li>November 3, 2025</li>
                    <li>January 26–27, 2026</li>
                    <li>April 3, 2026</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="alert alert-success text-center mt-4">
    <em>Mark your calendars and join us for these wonderful community events!</em><br />
    <strong>Email List</strong> - Contact us at: TBD
</div>

@code {
    private List<EventDto>? upcomingEvents;
    private List<EventTypeDto>? eventTypes;
    private List<EventDto>? allEvents;
    string testtext = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadEventTypes();
        await LoadUpcomingEvents();
        await LoadAllEvents();
    }

    private async Task LoadEventTypes()
    {
        try
        {
            eventTypes = await Http.GetFromJsonAsync<List<EventTypeDto>>("api/eventtypes");
        }
        catch (Exception)
        {
            eventTypes = new List<EventTypeDto>();
        }
    }

    private async Task LoadUpcomingEvents()
    {
        try
        {
            testtext = "Calling API...";
            var response = await Http.GetAsync("api/events/upcoming");
            
            if (response.IsSuccessStatusCode)
            {
                upcomingEvents = await response.Content.ReadFromJsonAsync<List<EventDto>>();
                testtext = $"Successfully loaded {upcomingEvents?.Count ?? 0} events!";
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                testtext = $"API Error: {response.StatusCode} - {error}";
            }
        }
        catch (Exception ex)
        {
            testtext = "Exception occurred: " + ex.Message;
        }
    }

    private async Task LoadAllEvents()
    {
        try
        {
            allEvents = await Http.GetFromJsonAsync<List<EventDto>>("api/events");
        }
        catch (Exception)
        {
            allEvents = new List<EventDto>();
        }
    }

    private int GetEventCount(int eventTypeId)
    {
        return allEvents?.Count(e => e.EventType?.Id == eventTypeId) ?? 0;
    }

    public class EventDto
    {
        public int Id { get; set; }
        public string Title { get; set; } = string.Empty;
        public DateTime Date { get; set; }
        public string Description { get; set; } = string.Empty;
        public string Location { get; set; } = string.Empty;
        public string ImageUrl { get; set; } = string.Empty;
        public string Link { get; set; } = string.Empty;
        public EventTypeDto? EventType { get; set; }
        public SchoolYearDto? SchoolYear { get; set; }
    }

    public class EventTypeDto
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Slug { get; set; } = string.Empty; // Add this line
        public string Description { get; set; } = string.Empty;
        public bool IsMandatory { get; set; }
        public int DisplayOrder { get; set; }
        public bool IsActive { get; set; }
        public int Size { get; set; }
        public string Icon { get; set; } = string.Empty;
        public string ColorClass { get; set; } = string.Empty;
    }

    public class SchoolYearDto
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }
}
