@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Web
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<AuthorizeView>
    <Authorized>
        <div class="dropdown">
            <button class="btn btn-outline-primary dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-person-circle"></i> @context.User.Identity?.Name
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="Account/Manage"><i class="bi bi-gear"></i> Manage Account</a></li>
                @if (context.User.IsInRole("Admin") || context.User.IsInRole("BoardMember"))
                {
                    <li><a class="dropdown-item" href="admin"><i class="bi bi-shield-lock text-danger"></i> Admin Dashboard</a></li>
                }
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form action="Account/Logout" method="post" class="d-inline">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="dropdown-item text-danger">
                            <i class="bi bi-box-arrow-right"></i> Logout
                        </button>
                    </form>
                </li>
            </ul>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="Account/Login?returnUrl=@Uri.EscapeDataString(currentUrl)" class="btn btn-primary btn-sm">
            <i class="bi bi-person-plus"></i> Login
        </a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string currentUrl = string.Empty;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.Uri;
    }
}